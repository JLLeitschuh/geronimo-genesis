/*
 * Copyright 2006 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

options {
    STATIC = false;
    UNICODE_INPUT = true;
    OPTIMIZE_TOKEN_MANAGER = true;
    ERROR_REPORTING = true;
    MULTI = true;
    VISITOR = true;
    NODE_DEFAULT_VOID = true;
}

///////////////////////////////////////////////////////////////////////////////

PARSER_BEGIN(CommandLineParser)

package org.apache.geronimo.gshell.commandline.parser;

/**
 * Command line parser.
 *
 * @version $Id$
 */
public class CommandLineParser
    extends CommandLineParserSupport
{
    //
    // TODO: ???
    //
}

PARSER_END(CommandLineParser)

///////////////////////////////////////////////////////////////////////////////

//
// WHITE SPACE
//

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| "\f"
}

//
// COMMENTS
//

SPECIAL_TOKEN :
{
  <SINGLE_LINE_COMMENT: "#" (~["\n", "\r"])* ("\n" | "\r" | "\r\n")?>
}

//
// LITERALS
//

TOKEN :
{
  < PLAIN_ARGUMENT:
      (   (~["\"", "\\", " ", "\t", "\n", "\r", "\f"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )+
  >
|
  < OPAQUE_ARGUMENT:
      "'"
      (   (~["\"","\\","\n","\r"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )*
      "'"
  >
|
  < QUOTED_ARGUMENT:
      "\""
      (   (~["\"","\\","\n","\r"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )*
      "\""
  >
}

///////////////////////////////////////////////////////////////////////////////

ASTCommandLine CommandLine() #CommandLine: {}
{
    Expression()
    { return jjtThis; }
}

void Expression() #Expression: {}
{
    ( Argument() )*
}

void Argument() : {}
{
    QuotedArgument() | OpaqueArgument() | PlainArgument()
}

void QuotedArgument() #QuotedArgument:
{
    Token t;
}
{
    t=<QUOTED_ARGUMENT>
    {
        jjtThis.setToken(t);
    }
}

void OpaqueArgument() #OpaqueArgument:
{
    Token t;
}
{
    t=<OPAQUE_ARGUMENT>
    {
        jjtThis.setToken(t);
    }
}

void PlainArgument() #PlainArgument:
{
    Token t;
}
{
    t=<PLAIN_ARGUMENT>
    {
        jjtThis.setToken(t);
    }
}
